convert c: #define NCURSES_CAST(type, value) (type)(value)
to fb:     #define NCURSES_CAST(type, value) cast(type, value)

convert c: #define NCURSES_ACS(c) (acs_map[NCURSES_CAST(unsigned char,c)])
to fb:     #define NCURSES_ACS(c) (acs_map(cubyte(c)))

convert c:
	#define getsyx(y, x) \
		do { \
			if (newscr) { \
				if (is_leaveok(newscr)) \
					(y) = (x) = -1; \
				else \
					getyx(newscr, (y), (x)); \
			} \
		} while(0)
to c:
	#define getsyx(y, x) \
		do { \
			if (newscr) { \
				if (is_leaveok(newscr)) { \
					(x) = -1; \
					(y) = -1; \
				} else { \
					getyx(newscr, (y), (x)); \
				} \
			} \
		} while(0)

convert c: #define getattrs(win) NCURSES_CAST(int, (win) ? (win)->_attrs : A_NORMAL)
to fb:     #define getattrs(win) clng(iif((win), (win)->_attrs, A_NORMAL))

convert c: #define wattrset(win, at) ((win) ? ((win)->_attrs = NCURSES_CAST(attr_t, at), OK) : ERR)
to fb:
	#macro wattrset(win,at)
		if (win) then
			(win)->_attrs = NCURSES_CAST(attr_t, at)
		end if
	#endmacro

convert c: #define PAIR_NUMBER(a) (NCURSES_CAST(int,((NCURSES_CAST(unsigned long,a) & A_COLOR) >> NCURSES_ATTR_SHIFT)))
to fb:     #define PAIR_NUMBER(a) clng((cast(culong,a) and A_COLOR) shr NCURSES_ATTR_SHIFT)

convert c: #define wattr_set(win,a,p,opts) ((win)->_attrs = (((a) & ~A_COLOR) | (attr_t)COLOR_PAIR(p)), OK)
to c:      #define wattr_set(win,a,p,opts) (win)->_attrs = (((a) & ~A_COLOR) | (attr_t)COLOR_PAIR(p))

convert c:
	#define wattr_get(win,a,p,opts) \
		((void)((a) != (void *)0 && (*(a) = (win)->_attrs)), \
		 (void)((p) != (void *)0 && (*(p) = (short)PAIR_NUMBER((win)->_attrs))), \
		 OK)
to fb:
	#macro wattr_get(win,a,p,opts)
		if a then
			*(a) = (win)->_attrs
		end if
		if p then
			*(p) = cshort(PAIR_NUMBER((win)->_attrs))
		end if
	#endmacro

convert c: #define wgetscrreg(win, t, b) ((win) ? (*(t) = (win)->_regtop, *(b) = (win)->_regbottom, OK) : ERR)
to fb:
	private function wgetscrreg(byval win as WINDOW_ ptr, byval t as short ptr, byval b as short ptr) as integer
		if win then
			*t = win->_regtop
			*b = win->_regbottom
			function = OK
		else
			function = ERR_
		end if
	end function
